%###########################################
% Elementroutine
%###########################################
function [Kte,Me] = Elementroutine_Platten(h,E,rho,lex,ley,v)
% Elementroutine: compute Kte, Me
% define empty Kte
Kte=zeros(16);

% define empty Me
Me=zeros(16);

% define sampling points for Gauss-quadrature
xiVec=[-sqrt(3/7+2/7*sqrt(6/5)),-sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7+2/7*sqrt(6/5))];
etaVec=[-sqrt(3/7+2/7*sqrt(6/5)),-sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7+2/7*sqrt(6/5))];
% weights for sampling points of Gauss-quadrature
wVec=[(18-sqrt(30))/36,(18+sqrt(30))/36,(18+sqrt(30))/36,(18-sqrt(30))/36];
uVec=wVec;

for i=1:length(xiVec)
    x = xiVec(i);
    w = wVec(i);
    for j = 1:length(etaVec)
        y = etaVec(j);
        u = uVec(j);        
        % define N, Nxx, Nyy, Nxy vector
        N=[ (1/16)*(-1 + x)^2*(2 + x)*(-1 + y)^2*(2 + y)  ...
            (1/16)*(-1 + x)^2*(1 + x)*(-1 + y)^2*(2 + y)  ...
            (1/16)*(-1 + x)^2*(2 + x)*(-1 + y)^2*(1 + y)  ...
            (1/16)*(-1 + x)^2*(1 + x)*(-1 + y)^2*(1 + y) ...
            (-(1/16))*(-2 + x)*(1 + x)^2*(-1 + y)^2*(2 + y) ...
            (1/16)*(-1 + x)*(1 + x)^2*(-1 + y)^2*(2 + y) ...
            (-(1/16))*(-2 + x)*(1 + x)^2*(-1 + y)^2*(1 + y) ...
            (1/16)*(-1 + x)*(1 + x)^2*(-1 + y)^2*(1 + y) ...
            (-(1/16))*(-1 + x)^2*(2 + x)*(-2 + y)*(1 + y)^2 ...
            (-(1/16))*(-1 + x)^2*(1 + x)*(-2 + y)*(1 + y)^2 ...
            (1/16)*(-1 + x)^2*(2 + x)*(-1 + y)*(1 + y)^2 ...
            (1/16)*(-1 + x)^2*(1 + x)*(-1 + y)*(1 + y)^2 ...
            (1/16)*(-2 + x)*(1 + x)^2*(-2 + y)*(1 + y)^2 ...
            (-(1/16))*(-1 + x)*(1 + x)^2*(-2 + y)*(1 + y)^2 ...
            (-(1/16))*(-2 + x)*(1 + x)^2*(-1 + y)*(1 + y)^2 ...
            (1/16)*(-1 + x)*(1 + x)^2*(-1 + y)*(1 + y)^2 ];
        
        Nxx=[ (3*x*(-1 + y)^2*(2 + y))/(2*lex^2) ...
               ((-1 + 3*x)*(-1 + y)^2*(2 + y))/(2*lex^2) ...
               (3*x*(-1 + y)^2*(1 + y))/(2*lex^2) ...
               ((-1 + 3*x)*(-1 + y)^2*(1 + y))/(2*lex^2) ...
               -((3*x*(-1 + y)^2*(2 + y))/(2*lex^2)) ...
               ((1 + 3*x)*(-1 + y)^2*(2 + y))/(2*lex^2) ...
               -((3*x*(-1 + y)^2*(1 + y))/(2*lex^2)) ...
               ((1 + 3*x)*(-1 + y)^2*(1 + y))/(2*lex^2) ...
               -((3*x*(-2 + y)*(1 + y)^2)/(2*lex^2)) ...
               -(((-1 + 3*x)*(-2 + y)*(1 + y)^2)/(2*lex^2)) ...
               (3*x*(-1 + y)*(1 + y)^2)/(2*lex^2) ...
               ((-1 + 3*x)*(-1 + y)*(1 + y)^2)/(2*lex^2) ...
               (3*x*(-2 + y)*(1 + y)^2)/(2*lex^2) ...
               -(((1 + 3*x)*(-2 + y)*(1 + y)^2)/(2*lex^2)) ...
               -((3*x*(-1 + y)*(1 + y)^2)/(2*lex^2)) ...
               ((1 + 3*x)*(-1 + y)*(1 + y)^2)/(2*lex^2) ];
        
         Nyy=[ (3*(-1 + x)^2*(2 + x)*y)/(2*ley^2) ...
              (3*(-1 + x)^2*(1 + x)*y)/(2*ley^2) ...
               ((-1 + x)^2*(2 + x)*(-1 + 3*y))/(2*ley^2) ...
               ((-1 + x)^2*(1 + x)*(-1 + 3*y))/(2*ley^2) ...
               -((3*(-2 + x)*(1 + x)^2*y)/(2*ley^2)) ...
               (3*(-1 + x)*(1 + x)^2*y)/(2*ley^2) ...
               -(((-2 + x)*(1 + x)^2*(-1 + 3*y))/(2*ley^2)) ...
               ((-1 + x)*(1 + x)^2*(-1 + 3*y))/(2*ley^2) ...
               -((3*(-1 + x)^2*(2 + x)*y)/(2*ley^2)) ...
               -((3*(-1 + x)^2*(1 + x)*y)/(2*ley^2)) ...
               ((-1 + x)^2*(2 + x)*(1 + 3*y))/(2*ley^2) ...
               ((-1 + x)^2*(1 + x)*(1 + 3*y))/(2*ley^2) ...
               (3*(-2 + x)*(1 + x)^2*y)/(2*ley^2) ...
               -((3*(-1 + x)*(1 + x)^2*y)/(2*ley^2)) ...
               -(((-2 + x)*(1 + x)^2*(1 + 3*y))/(2*ley^2)) ...
               ((-1 + x)*(1 + x)^2*(1 + 3*y))/(2*ley^2) ];
               
         Nxy=[ (9*(-1 + x^2)*(-1 + y^2))/(4*lex*ley) ...
               (3*(-1 + x)*(1 + 3*x)*(-1 + y^2))/(4*lex*ley) ...
               (3*(-1 + x^2)*(-1 + y)*(1 + 3*y))/(4*lex*ley) ...
               ((-1 + x)*(1 + 3*x)*(-1 + y)*(1 + 3*y))/(4*lex*ley) ...
               -((9*(-1 + x^2)*(-1 + y^2))/(4*lex*ley)) ...
               (3*(1 + x)*(-1 + 3*x)*(-1 + y^2))/(4*lex*ley) ...
               -((3*(-1 + x^2)*(-1 + y)*(1 + 3*y))/(4*lex*ley)) ...
               ((1 + x)*(-1 + 3*x)*(-1 + y)*(1 + 3*y))/(4*lex*ley) ...
               -((9*(-1 + x^2)*(-1 + y^2))/(4*lex*ley)) ...
               -((3*(-1 + x)*(1 + 3*x)*(-1 + y^2))/(4*lex*ley)) ...
               (3*(-1 + x^2)*(1 + y)*(-1 + 3*y))/(4*lex*ley) ...
               ((-1 + x)*(1 + 3*x)*(1 + y)*(-1 + 3*y))/(4*lex*ley) ...
               (9*(-1 + x^2)*(-1 + y^2))/(4*lex*ley) ...
               -((3*(1 + x)*(-1 + 3*x)*(-1 + y^2))/(4*lex*ley)) ...
               -((3*(-1 + x^2)*(1 + y)*(-1 + 3*y))/(4*lex*ley)) ...
               ((1 + x)*(-1 + 3*x)*(1 + y)*(-1 + 3*y))/(4*lex*ley) ];
        
        % compute Kte and Me for sampling point of Gauss-integration
        Me=Me + rho * h * (N' * N) * w * u;
        Kte=Kte + ((E*h^3)/(12*(1-v^2))) * ((Nxx' * Nxx)+v*((Nxx'*Nyy)+(Nyy'*Nxx))+(Nyy'*Nyy)+2*(1-v)*(Nxy'*Nxy)) * w * u;
    end
end

end