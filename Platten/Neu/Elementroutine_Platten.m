%###########################################
% Elementroutine
%###########################################
function [Kte,Me] = Elementroutine_Platten(h,E,rho,le,v)
% Elementroutine: compute Kte, Me
% define empty Kte
Kte=zeros(16);

% define empty Me
Me=zeros(16);

%xiVec=[-sqrt(1/3),sqrt(1/3)];   % define sampling points for Gauss-quadrature
%wVec =[1,1];   % weights for sampling points of Gauss-quadrature


% xVec=[-sqrt(3/5),0,sqrt(3/5)];  % define sampling points for Gauss-quadrature
% wVec=[5/9,8/9,5/9];             % weights for sampling points of Gauss-quadrature
% yVec=[-sqrt(3/5),0,sqrt(3/5)];
% uVec=[5/9,8/9,5/9];

% xVec=[-0.861136312,-0.339981044,0.339981044,0.861136312];  % define sampling points for Gauss-quadrature
% wVec=[0.347854845,0.652145155,0.652145155,0.347854845];             % weights for sampling points of Gauss-quadrature
% yVec=[-0.861136312,-0.339981044,0.339981044,0.861136312];
% uVec=[0.347854845,0.652145155,0.652145155,0.347854845];


xiVec=[-sqrt(3/7+2/7*sqrt(6/5)),-sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7+2/7*sqrt(6/5))];
etaVec=[-sqrt(3/7+2/7*sqrt(6/5)),-sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7-2/7*sqrt(6/5)),sqrt(3/7+2/7*sqrt(6/5))];
wVec=[(18-sqrt(30))/36,(18+sqrt(30))/36,(18+sqrt(30))/36,(18-sqrt(30))/36];
uVec=wVec;



for i=1:length(xiVec)
%     x = xVec(i);
    xi = xiVec(i);
    w =wVec(i);
    for j = 1:length(etaVec)
%         y = yVec(j);
        eta = etaVec(j);
        u = uVec(j);
        
        % define N, Nxx, Nyy, Nxy vector

           
           
N=[(1/16)*(-1 + eta)^2*(2 + eta)*(-1 + xi)^2*(2 + xi), (1/...
   16)*(-1 + eta)^2*(2 + eta)*(-1 + xi)^2*(1 + xi),... 
   (1/16)*(-1 + eta)^2*(1 + eta)*(-1 + xi)^2*(2 + xi), (1/...
   16)*(-1 + eta)^2*(1 + eta)*(-1 + xi)^2*...
     (1 + xi), (-(1/16))*(-1 + eta)^2*(2 + eta)*(-2 + xi)*(1 + xi)^2, ...
   (1/16)*(-1 + eta)^2*(2 + eta)*(-1 + ...
   xi)*(1 + xi)^2, (-(1/16))*(-1 + eta)^2*(1 + eta)*(-2 + xi)*...
     (1 + xi)^2, (1/16)*(-1 + eta)^2*(1 + eta)*(-1 + xi)*(1 + xi)^2, ...
   (-(1/16))*(-2 + eta)*(1 + eta)^2*(-1 + xi)^2*(2 + ...
   xi), (-(1/16))*(-2 + eta)*(1 + eta)^2*(-1 + xi)^2*...
     (1 + xi), (1/16)*(-1 + eta)*(1 + eta)^2*(-1 + xi)^2*(2 + xi), ...
   (1/16)*(-1 + eta)*(1 + eta)^2*(-1 + xi)^2*(1 + xi), (1/16)*(-2 + ...
   eta)*(1 + eta)^2*(-2 + xi)*...
     (1 + xi)^2, (-(1/16))*(-2 + eta)*(1 + eta)^2*(-1 + ...
   xi)*(1 + xi)^2, ...
   (-(1/16))*(-1 + eta)*(1 + eta)^2*(-2 + xi)*(1 + xi)^2, (1/...
   16)*(-1 + eta)*(1 + eta)^2*(-1 + xi)*...
     (1 + xi)^2];
    
    
Nxx=[(75/8)*(-1 + eta)^2*(2 + eta)*xi, (25/8)*(-1 + eta)^2*(2 + eta)*(-1 + ...
   3*xi), (75/8)*(-1 + eta)^2*(1 + eta)*xi, (25/8)*(-1 + eta)^2*(1 + ...
   eta)*(-1 + 3*xi), (-(75/8))*(-1 + eta)^2*(2 + eta)*xi, (25/...
   8)*(-1 + eta)^2*(2 + eta)*(1 + 3*xi),... 
   (-(75/8))*(-1 + eta)^2*(1 + eta)*xi, (25/8)*(-1 + eta)^2*(1 + ...
   eta)*(1 + 3*xi), (-(75/8))*(-2 + ...
   eta)*(1 + eta)^2*xi, (-(25/8))*(-2 + eta)*(1 + eta)^2*(-1 + ...
   3*xi), (75/8)*(-1 + eta)*(1 + eta)^2*xi, (25/8)*(-1 + ...
   eta)*(1 + eta)^2*(-1 + 3*xi), ...
   (75/8)*(-2 + eta)*(1 + eta)^2*xi, (-(25/8))*(-2 + ...
   eta)*(1 + eta)^2*(1 + 3*xi), (-(75/8))*(-1 + ...
   eta)*(1 + eta)^2*xi, (25/8)*(-1 + eta)*(1 + eta)^2*(1 + 3*xi)];

Nyy=[(75/8)*eta*(-1 + xi)^2*(2 + xi), (75/8)*eta*(-1 + xi)^2*(1 + xi), (25/...
   8)*(-1 + 3*eta)*(-1 + xi)^2*(2 + xi), (25/8)*(-1 + ...
   3*eta)*(-1 + xi)^2*(1 + xi), (-(75/8))*eta*(-2 + ...
   xi)*(1 + xi)^2, (75/8)*eta*(-1 + xi)*(1 + xi)^2, ...
   (-(25/8))*(-1 + 3*eta)*(-2 + xi)*(1 + xi)^2, (25/8)*(-1 + ...
   3*eta)*(-1 + xi)*(1 + xi)^2, (-(75/8))*eta*(-1 + xi)^2*(2 + ...
   xi), (-(75/8))*eta*(-1 + xi)^2*(1 + xi), (25/8)*(1 + ...
   3*eta)*(-1 + xi)^2*(2 + xi), (25/8)*(1 + 3*eta)*(-1 + xi)^2*(1 + ...
   xi), ...
   (75/8)*eta*(-2 + xi)*(1 + xi)^2, (-(75/8))*eta*(-1 + ...
   xi)*(1 + xi)^2, (-(25/8))*(1 + 3*eta)*(-2 + xi)*(1 + xi)^2, (25/...
   8)*(1 + 3*eta)*(-1 + xi)*(1 + xi)^2];

Nxy=[(225/16)*(-1 + eta^2)*(-1 + xi^2), (75/16)*(-1 + eta^2)*(-1 + ...
   xi)*(1 + 3*xi), ...
   (75/16)*(-1 + eta)*(1 + 3*eta)*(-1 + xi^2), (25/16)*(-1 + ...
   eta)*(1 + 3*eta)*(-1 + xi)*(1 + 3*xi), ...
   (-(225/16))*(-1 + eta^2)*(-1 + xi^2), (75/16)*(-1 + eta^2)*(1 + ...
   xi)*(-1 + 3*xi), ...
   (-(75/16))*(-1 + eta)*(1 + 3*eta)*(-1 + xi^2), (25/16)*(-1 + ...
   eta)*(1 + 3*eta)*(1 + xi)*(-1 + 3*xi), ...
   (-(225/16))*(-1 + eta^2)*(-1 + xi^2), (-(75/16))*(-1 + ...
   eta^2)*(-1 + xi)*(1 + 3*xi), ...
   (75/16)*(1 + eta)*(-1 + 3*eta)*(-1 + xi^2), (25/16)*(1 + ...
   eta)*(-1 + 3*eta)*(-1 + xi)*(1 + 3*xi), ...
   (225/16)*(-1 + eta^2)*(-1 + xi^2), (-(75/16))*(-1 + eta^2)*(1 + ...
   xi)*(-1 + 3*xi), ...
   (-(75/16))*(1 + eta)*(-1 + 3*eta)*(-1 + xi^2), (25/16)*(1 + ...
   eta)*(-1 + 3*eta)*(1 + xi)*(-1 + 3*xi)];
        
        % compute Kte and Me for sampling point of Gauss-integration
        Me=Me + rho * h * (N' * N) * w * u;
        Kte=Kte + ((E*h^3)/(12*(1-v^2))) * ((Nxx' * Nxx)+v*((Nxx'*Nyy)+(Nyy'*Nxx))+(Nyy'*Nyy)+2*(1-v)*(Nxy'*Nxy)) * w * u;
    end
end

end